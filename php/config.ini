; Configuration file for AppOptics PHP instrumentation via the
; `appoptics.so` extension. For help configuring the extension, please visit:
; http://docs.appoptics.com

extension=appoptics.so

[appoptics]
; appoptics.service_key: unique service identifier
appoptics.service_key = <changeme>:php-service

; appoptics.tracing: When traces should be initiated for incoming requests. Valid
; options change behavior when the incoming request is already part of a trace:
;   "enabled"  - Continue existing traces, otherwise attempt to start a new one.
;                This is an appropriate setting for command line PHP scripts that
;                are started manually or by cron.
;   "disabled" - Never continue existing traces or start new ones.
;appoptics.tracing = enabled

; appoptics.enable_sanitize_sql: Enable or disable sanitizing SQL query traces using
; one of the following options:
;  0 - disable SQL sanitizing,
;  1 - enable SQL sanitizing and attempt to automatically determine which
;      quoting form is used (the default),
;  2 - enable SQL sanitizing and drop double quoted characters, or
;  4 - enable SQL sanitizing and retain double quoted characters.
;appoptics.enable_sanitize_sql = 1

; appoptics.enable_drupal_tracing: Enable or disable drupal tracing. Default is 1.
;appoptics.enable_drupal_tracing = 1

; appoptics.enable_drupal_profiling: Enable or disable drupal profiling. Only in affect
; if appoptics.enable_drupal_tracing = 1. Default is 0.
;appoptics.enable_drupal_profiling = 0

; appoptics.sample_rate: This value reflects the number of requests out of every
; million that will be traced, and must be an integer between 0 and 1000000.
; Setting this value is deprecated because it interferes with automatic sample
; rate configuration via smart tracing:
; http://docs.appoptics.com
;appoptics.sample_rate = 300000

; appoptics.enable_cli: Enable or disable Command Line Interface (CLI) tracing. Default is 0.
;appoptics.enable_cli = 0

; appoptics.so_file: The file name of the module. Default is "appoptics.so".
;appoptics.so_file = appoptics.so

; appoptics.debug_level: Change diagnostic log detail levels using one of the
; following options:
; -1 - disable
;  0 - fatal
;  1 - error
;  2 - warn (the default)
;  3 - info
;  4 - low
;  5 - medium
;  6 - high
;appoptics.debug_level = 2

; appoptics.hostname_alias: An optional logical/readable hostname that can be used to easily 
; identify the host
;appoptics.hostname_alias = 

; appoptics.max_transactions: the maximum number of transaction names to track when aggregating 
; metric and histogram data by individual service transaction within the metrics flush interval.
; Changing this value will have a noticable impact on the used memory. Default is 50.
;appoptics.max_transactions = 50

; appoptics.max_ready_wait_time: the maximum wait time for Appoptics to become ready for receiving
; traces (in milli seconds). A value of 0 will turn off waiting which ensures Appoptics won't
; block the app on startup. Default is 0 ms (off).
;appoptics.max_ready_wait_time = 0

; appoptics.max_flush_wait_time: the maximum wait time for flushing data before terminating the
; app (in milli seconds). A value of 0 will turn off flushing which ensures Appoptics won't block 
; the app on termination. Default is 5000 ms.
;appoptics.max_flush_wait_time = 5000

; appoptics.enable: tracing and transactions can be enabled/disabled with this option which is
; helpful for environments with multiple vhosts. Setting this option in the ini file will affect
; the global scope of PHP. It can also be set on vhosts individually (e.g. .htaccess or httpd.conf).
; Default is 1.
;appoptics.enable = 1

; appoptics.enable_profiling: Enable or disable function profiling. Default is 0.
appoptics.enable_profiling = 1

; appoptics.profiling_interval: The interval in milliseconds at which function profiling takes snapshopts.
; Only valid if appoptics.enable_profiling is set to 1. Minimum value is 20 ms, default is also 20 ms.
;appoptics.profiling_interval = 20

; appoptics.transaction_settings_file: Path to the INI file that contains the transaction settings for
; filtering specific transactions. The Path should be absolute (e.g. /etc/php/conf.d/ao-transaction-settings.ini)
; or relative to the execution directory of your app. Each setting must be nested under a new [index].
; Example content of INI file:
; [0]
; type = url
; regexp = "*./abc/.*"
; tracing = "disabled"
; 
; [1]
; type = url
; extensions = "css html"
; tracing = "disabled"
; 
; In the example above all transactions that have "/abc/" in their paths or end in the file extension 
; .css/.html will be disabled for tracing. The first setting that matches a transaction will be used.
; This option works well in combination with appoptics.tracing which could be used to enable/disable
; tracing globablly and then use transaction specific settings to enable/disable certain transactions
; only. Different settings files can be configured on a vhost level. See http://docs.appoptics.com 
; for more information on Transaction Filtering. Default is "".
;appoptics.transaction_settings_file = 

; appoptics.log_trace_id: Enable or disable appending the trace Id of the currently running request
; to internal errors/warnings and PHP logs that were generated with error_log. The sample flag 
; (whether or not request is being sampled) is added to the trace Id and will be of the form "-0" 
; for non-sampled and "-1" for sampled requests.
; Possible values:
;  "enabled"     - append all trace Ids
;  "disabled"    - do not append trace Ids (default)
;  "sampled_only" - append only trace Ids of sampled request
;appoptics.log_trace_id = disabled
